// HTTP old generation (v0.9, v1.0, v1.1) C library.
// Copyright (c) 2019 AUTHORS, MIT License.

// This file was generated, do not edit manually.

// It may not be possible to run generator while cross compiling.
// So generated file should be shipped with its template.

#if !defined(HOG_@PARSER_PREFIX@_PARSER_H)
#define HOG_@PARSER_PREFIX@_PARSER_H

#include <stdbool.h>
#include <stdlib.h>

#include "@PARSER_SOURCE_PATH@common.h"

// clang-format off

typedef uint_fast@CMAKE_PARSER_MIN_STATE_BITS@_t hog_@PARSER_PREFIX_LOWER_CASE@_parser_state_fast_t;

// -- constant --

extern const char*  HOG_@PARSER_PREFIX@_PARSER_CONSTANT;
extern const size_t HOG_@PARSER_PREFIX@_PARSER_CONSTANT_LENGTH;
extern const hog_@PARSER_PREFIX_LOWER_CASE@_parser_state_fast_t HOG_@PARSER_PREFIX@_PARSER_INITIAL_STATE;

// clang-format on

inline hog_@PARSER_PREFIX_LOWER_CASE@_parser_state_fast_t hog_@PARSER_PREFIX_LOWER_CASE@_get_next_state(
  hog_@PARSER_PREFIX_LOWER_CASE@_parser_state_fast_t state, hog_symbol_fast_t byte)
{
  if (HOG_@PARSER_PREFIX@_PARSER_CONSTANT[state] != byte) {
    return HOG_@PARSER_PREFIX@_PARSER_INITIAL_STATE;
  }

  return state + 1;
}

inline bool hog_@PARSER_PREFIX_LOWER_CASE@_is_finished(hog_@PARSER_PREFIX_LOWER_CASE@_parser_state_fast_t state)
{
  return state == HOG_@PARSER_PREFIX@_PARSER_CONSTANT_LENGTH;
}

#endif // HOG_@PARSER_PREFIX@_PARSER_H
