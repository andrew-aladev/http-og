// HTTP old generation (v0.9, v1.0, v1.1) C library.
// Copyright (c) 2019 AUTHORS, MIT License.

// This file was generated, do not edit manually.

// It may not be possible to run generator while cross compiling.
// So generated file should be shipped with its template.

#include "@FILE_NAME@.h"

const size_t HOG_PROCESSOR_@PREFIX@_CONSTANTS_LENGTH = @CMAKE_CONSTANTS_LENGTH@;

const hog_processor_state_fast_t HOG_PROCESSOR_@PREFIX@_INITIAL_STATE = HOG_PROCESSOR_@PREFIX@_CONSTANTS_LENGTH;

const size_t HOG_PROCESSOR_@PREFIX@_ALPHABET_LENGTH     = @CMAKE_ALPHABET_LENGTH@;
const size_t HOG_PROCESSOR_@PREFIX@_ALPHABET_MAX_LENGTH = HOG_MAX_SYMBOL + 1;

const hog_symbol_fast_t HOG_PROCESSOR_@PREFIX@_UNDEFINED_SYMBOL = HOG_MAX_SYMBOL;

#define SYMBOL_BY_BYTES_LENGTH HOG_MAX_SYMBOL + 1

// clang-format off

const hog_symbol_t HOG_PROCESSOR_@PREFIX@_SYMBOL_BY_BYTES[SYMBOL_BY_BYTES_LENGTH] = {
  [0 ... SYMBOL_BY_BYTES_LENGTH - 1] = HOG_PROCESSOR_@PREFIX@_UNDEFINED_SYMBOL,
@CMAKE_SYMBOL_BY_BYTES@};

// clang-format on

#define NEXT_STATE_BY_LAST_SYMBOLS_LENGTH (@CMAKE_MAX_STATE@ + 1) * HOG_PROCESSOR_@PREFIX@_ALPHABET_LENGTH

// clang-format off

const hog_processor_@PREFIX_LOWER_CASE@_state_t HOG_PROCESSOR_@PREFIX@_NEXT_STATE_BY_LAST_SYMBOLS[NEXT_STATE_BY_LAST_SYMBOLS_LENGTH] = {
  [0 ... NEXT_STATE_BY_LAST_SYMBOLS_LENGTH - 1] = HOG_PROCESSOR_@PREFIX@_INITIAL_STATE,
@CMAKE_NEXT_STATE_BY_LAST_SYMBOLS@};

// clang-format on

extern inline hog_processor_state_fast_t hog_processor_@PREFIX_LOWER_CASE@_get_next_state(
  hog_processor_state_fast_t state, hog_symbol_fast_t byte);

extern inline bool hog_processor_@PREFIX_LOWER_CASE@_is_finished(hog_processor_state_fast_t state);
