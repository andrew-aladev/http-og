// HTTP old generation (v0.9, v1.0, v1.1) C library.
// Copyright (c) 2019 AUTHORS, MIT License.

// This file was generated, do not edit manually.

// It may not be possible to run generator while cross compiling.
// So generated file should be distributed with its template.

#if !defined(HOG_PROCESSOR_@PREFIX@_H)
#define HOG_PROCESSOR_@PREFIX@_H

#include <stdbool.h>

#include "@RELATIVE_SOURCE_PATH@common.h"
#include "@RELATIVE_SOURCE_PATH@log.h"

extern const hog_processor_state_fast_t HOG_PROCESSOR_@PREFIX@_INITIAL_STATE;

extern const hog_symbol_t               HOG_PROCESSOR_@PREFIX@_CONSTANT_SYMBOLS[];
extern const hog_processor_state_fast_t HOG_PROCESSOR_@PREFIX@_CONSTANT_LENGTH;

inline hog_processor_state_fast_t hog_processor_@PREFIX_LOWER_CASE@_get_next_state(
  hog_processor_state_fast_t state, hog_symbol_fast_t byte)
{
  if (HOG_PROCESSOR_@PREFIX@_CONSTANT_SYMBOLS[state] != byte) {
    HOG_LOG_ERROR("@PREFIX_LOWER_CASE@ processor received invalid byte: %u", byte);
    return HOG_PROCESSOR_@PREFIX@_INITIAL_STATE;
  }

  return state + 1;
}

inline bool hog_processor_@PREFIX_LOWER_CASE@_is_valid(hog_processor_state_fast_t state)
{
  return state == HOG_PROCESSOR_@PREFIX@_CONSTANT_LENGTH;
}

#endif // HOG_PROCESSOR_@PREFIX@_H
